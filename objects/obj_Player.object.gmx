<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize
spd = 4;
rekt_pussies = 0
username_x_offset = 0
username_y_offset = -40
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movement

target_x = x
target_y = y

up = keyboard_check(ord('W'))
down = keyboard_check(ord('S'))
left = keyboard_check(ord('A'))
right = keyboard_check(ord('D'))

if(up){
    target_y -= spd
}
if(down){
    target_y += spd
}
if(left){
    target_x -= spd;
}
if(right){
    target_x += spd
}

// make sure not to go out of bounds
if(target_x &lt; 0){
    target_x = 0
} else if(target_x &gt; room_width){
    target_x = room_width
}
if(target_y &lt; 0){
    target_y = 0
} else if(target_y &gt; room_height){
    target_y = room_height
}

// if moved, update position
if(target_x != x || target_y != y){   
    x = target_x
    y = target_y

    var packet = buffer_create(1, buffer_grow, 1);
    buffer_write(packet, buffer_string, "pos");
    buffer_write(packet, buffer_u32, x);
    buffer_write(packet, buffer_u32, y);
   
    scr_network_write(Network.TCP_socket, packet, "tcp");
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// make visible
if(room_get_name(room) != "rm_login"){
    visible = true
} else {
    visible = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw username
draw_self();

// configure font
draw_set_font(fnt_user_name)
draw_set_halign(fa_center)

// draw shadow
draw_text_colour(x+username_x_offset+1, y+username_y_offset, username, c_black, c_black, c_black, c_black, 1.0)
draw_text_colour(x+username_x_offset-1, y+username_y_offset, username, c_black, c_black, c_black, c_black, 1.0)
draw_text_colour(x+username_x_offset, y+username_y_offset+1, username, c_black, c_black, c_black, c_black, 1.0)
draw_text_colour(x+username_x_offset, y+username_y_offset-1, username, c_black, c_black, c_black, c_black, 1.0)

// draw inner
draw_text_colour(x+username_x_offset, y+username_y_offset, username, c_white, c_white, c_white, c_white, 1.0)

// reset font
draw_set_halign(fa_left)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
