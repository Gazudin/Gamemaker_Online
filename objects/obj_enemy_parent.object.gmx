<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the enemy aprent
phy_fixed_rotation = true;
host = false;
image_spd = 0;
image_speed = image_spd;
ID = "";
hp = 0;
maxhp = 0;
expr = 0;

xaxis = 0;
yaxis = 0;
target_x = x;
target_y = y;
movement = IDLE;
face = RIGHT;
state = scr_enemy_idle_state;

id_x_offset = 0;
id_y_offset = -sprite_height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the experience, loot drop chance
audio_play_sound(snd_enemy_die , 5, false);
with(instance_create(x, y, obj_expr)){
  plusexpr = other.expr;
}

// Drop a health pack
if(scr_chance(.3)){ // 30% chance
  instance_create(x+random_range(-10, 10), y+random_range(-10, 10), obj_health);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stall alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wander alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Depth correction, execute state, update sprite
depth = -y;

// Update sprite
sprite_index = sprite[movement, face];

if(instance_exists(obj_player)){
  // If we're client
  if(obj_player.AI_host){ 
    // Execute state
    script_execute(state);
  // Else move to target
  } else if(x != target_x and y != target_y){
    var dir = point_direction(x, y, target_x, target_y);
    xaxis = lengthdir_x(1, dir);
    yaxis = lengthdir_y(1, dir);
    scr_move_axis();
  } else {
    movement = IDLE;
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw debug
// Configure font
draw_set_font(fnt_HUD);
draw_set_halign(fa_right);
draw_set_valign(fa_bottom);

//scr_draw_border_text(display_get_gui_width(), 150, 'x/y: '+string(x)+"/"+string(y), c_white, c_black, 1, 1.0);
//scr_draw_border_text(display_get_gui_width(), 166, 'targetx/y: '+string(target_x)+"/"+string(target_y), c_white, c_black, 1, 1.0);

// Reset font
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw lifebar
draw_self();
// Get health percentage
var pct = round(hp/(maxhp/100));

// Draw pct
draw_set_halign(fa_center);
draw_set_font(fnt_user_name);
scr_draw_border_text(x, y+15, string(hp)+"/"+string(maxhp)+" = "+string(pct)+"%", c_white, c_black, 1, 1.0);

var flip = false;
if(image_xscale = -1){
  image_xscale = 1;
  flip = true;
}

// Draw outline
draw_set_color(c_black);
draw_rectangle(x-sprite_width/2-1, y-sprite_height/2-3,x-sprite_width/2+21, y-sprite_height/2, true)
// Draw maxhp
draw_set_color(c_red);
draw_rectangle(x-sprite_width/2, y-sprite_height/2-2,x-sprite_width/2+20, y-sprite_height/2-1, false);
// Draw current hp
draw_set_color(c_green);
draw_rectangle(x-sprite_width/2, y-sprite_height/2-2,x-sprite_width/2+(pct/5), y-sprite_height/2-1, false);

if(flip){
  image_xscale = -1;
}


// Reset text
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
